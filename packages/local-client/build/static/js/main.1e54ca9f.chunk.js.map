{"version":3,"sources":["components/CodeEditor/CodeEditor.module.css","components/Preview/Preview.module.css","components/TextEditor/TextEditor.module.css","components/CellListItem/CellListItem.module.css","../../../node_modules/prettier sync","components/ActionBar/ActionBar.module.css","components/ProgressBar/ProgressBar.module.css","components/CodeCell/CodeCell.module.css","components/CellList/CellList.module.css","components/AddCell/AddCell.module.css","state/action-types/index.ts","state/reducers/cellsReducer.ts","state/reducers/bundlesReducer.ts","state/reducers/index.ts","state/store.ts","utils/plugins/fetch-plugin.ts","utils/bundler.ts","utils/plugins/unpkg-path-plugin.ts","state/action-creators/index.ts","hooks/useActions.ts","components/ActionBar/ActionBar.tsx","components/CodeEditor/CodeEditor.tsx","hooks/useWindowsSize.ts","components/Resizable/Resizable.tsx","components/Preview/Preview.tsx","hooks/useTypedSelector.ts","components/ProgressBar/ProgressBar.tsx","components/CodeCell/CodeCell.tsx","hooks/useCumulativeCode.ts","components/TextEditor/TextEditor.tsx","components/CellListItem/CellListItem.tsx","components/AddCell/AddCell.tsx","components/CellList/CellList.tsx","index.tsx"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","ActionType","initialState","loading","error","order","data","cellsSelector","cells","map","reducer","produce","state","action","type","UPDATE_CELL","payload","content","DELETE_CELL","filter","MOVE_CELL","direction","index","findIndex","targetIndex","length","INSERT_CELL_AFTER","cell","randomId","unshift","splice","Math","random","toString","substr","BUNDLE_START","cellId","BUNDLE_COMPLETE","bundle","reducers","combineReducers","cellsReducers","bundles","bundlesReducers","store","createStore","applyMiddleware","thunk","dispatch","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","loader","contents","args","a","getItem","path","cachedResult","fetch","response","resolveDirURL","URL","url","pathname","text","escaped","replace","result","resolveDir","setItem","Bundler","esbuild","worker","wasmURL","rawCode","entryPoints","write","plugins","onResolve","namespace","href","includes","define","global","jsxFactory","jsxFragment","outputFiles","message","instance","initialize","console","log","getInstance","updateCell","deleteCell","moveCell","insertCellAfter","createBundle","input","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","ActionBar","className","styles","actionBar","onClick","babelParse","parse","sourceType","CodeEditor","initialValue","onChange","monacoRef","React","editorWrapper","buttonFormat","unformattedCode","current","getValue","formattedCode","prettier","format","parser","useTabs","singleQuote","trailingComma","semi","setValue","onMount","monacoEditor","onDidChangeModelContent","Highlighter","window","monaco","traverse","highLightOnDidChangeModelContent","value","height","theme","language","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","useWindowsSize","useState","width","innerWidth","innerHeight","windowsSize","setWindowsSize","useEffect","timer","handleSize","clearTimeout","setTimeout","addEventListener","removeEventListener","Resizable","resizableProps","children","internalWidth","setInternalWidth","minConstraints","Infinity","maxConstraints","resizeHandles","onResizeStop","_","size","html","Preview","bundleErrorMessage","iframeRef","srcdoc","contentWindow","postMessage","previewWrapper","ref","title","srcDoc","sandbox","previewError","useSelector","useReduxSelector","ProgressBar","progressBarCover","max","CodeCell","bundleSelector","orderedCells","codeAcc","c","push","join","style","display","flexDirection","wrapper","TextEditor","editing","setEditing","divEditorRef","handleEditing","event","target","contains","document","capture","textEditor","Markdown","source","CellListItem","child","actionBarWrapper","cellListItem","AddCell","previousCellId","forceVisible","addCell","addButtons","divider","CellList","renderedCells","cellList","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.1e54ca9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorWrapper\":\"CodeEditor_editorWrapper__HoH_M\",\"buttonFormat\":\"CodeEditor_buttonFormat__2vc0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewWrapper\":\"Preview_previewWrapper__1OoTK\",\"previewError\":\"Preview_previewError__3z8ts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textEditor\":\"TextEditor_textEditor__12dCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellListItem\":\"CellListItem_cellListItem__31PQd\",\"actionBarWrapper\":\"CellListItem_actionBarWrapper__1iviQ\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 119;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionBar\":\"ActionBar_actionBar__3cBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBarCover\":\"ProgressBar_progressBarCover__MbkTj\",\"fadeIn\":\"ProgressBar_fadeIn__1bzsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CodeCell_wrapper__2d69G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellList\":\"CellList_cellList__G-UsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addCell\":\"AddCell_addCell__3OUa1\",\"addButtons\":\"AddCell_addButtons__3e7Pp\",\"forceVisible\":\"AddCell_forceVisible__37-CE\",\"divider\":\"AddCell_divider__3QdBG\"};","export enum ActionType {\n  MOVE_CELL,\n  DELETE_CELL,\n  INSERT_CELL_AFTER,\n  UPDATE_CELL,\n  BUNDLE_START,\n  BUNDLE_COMPLETE,\n}\n","import { RootState } from './index';\nimport produce, { Draft } from 'immer';\n\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { ICell } from '../types';\n\ninterface ICellsState {\n  readonly loading: boolean;\n  readonly error: string | null;\n  readonly order: string[];\n  readonly data: {\n    [key: string]: ICell;\n  };\n}\n\nconst initialState: ICellsState = {\n  loading: false,\n  error: null,\n  order: [],\n  data: {},\n};\n\n/* Selectors */\nexport const cellsSelector = ({ cells }: RootState) =>\n  cells.order.map((id) => cells.data[id]);\n\nconst reducer = produce(\n  (state: Draft<ICellsState> = initialState, action: Action): ICellsState => {\n    switch (action.type) {\n      case ActionType.UPDATE_CELL:\n        const { id, content } = action.payload;\n        state.data[id].content = content;\n        return state;\n      case ActionType.DELETE_CELL:\n        delete state.data[action.payload];\n        state.order = state.order.filter((id) => id !== action.payload);\n        return state;\n      case ActionType.MOVE_CELL:\n        const { direction } = action.payload;\n        const index = state.order.findIndex((id) => id === action.payload.id);\n        const targetIndex = direction === 'up' ? index - 1 : index + 1;\n\n        if (targetIndex < 0 || targetIndex > state.order.length - 1) {\n          return state;\n        }\n\n        state.order[index] = state.order[targetIndex];\n        state.order[targetIndex] = action.payload.id;\n\n        return state;\n      case ActionType.INSERT_CELL_AFTER: {\n        const cell: ICell = {\n          content: '',\n          type: action.payload.type,\n          id: randomId(),\n        };\n\n        state.data[cell.id] = cell;\n        const index = state.order.findIndex((id) => id === action.payload.id);\n\n        if (index < 0) {\n          state.order.unshift(cell.id);\n        } else {\n          state.order.splice(index + 1, 0, cell.id);\n        }\n\n        return state;\n      }\n      default:\n        return state;\n      // throw new Error(`Action type not defined.`);\n    }\n  },\n  initialState,\n);\n\nconst randomId = () => Math.random().toString(36).substr(2, 5);\n\nexport default reducer;\n","import { RootState } from './index';\nimport produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface IBundleState {\n  [key: string]:\n    | {\n        loading: boolean;\n        code: string;\n        error: string;\n      }\n    | undefined;\n}\n\n/* Selectors */\nexport const bundleSelector = ({ bundles }: RootState, cellId: string) =>\n  bundles[cellId];\n\nconst initialState: IBundleState = {};\n\nconst reducer = produce(\n  (state: IBundleState = initialState, action: Action): IBundleState => {\n    switch (action.type) {\n      case ActionType.BUNDLE_START: {\n        state[action.payload.cellId] = {\n          loading: true,\n          code: '',\n          error: '',\n        };\n\n        return state;\n      }\n      case ActionType.BUNDLE_COMPLETE: {\n        state[action.payload.cellId] = {\n          loading: false,\n          code: action.payload.bundle.code,\n          error: action.payload.bundle.error,\n        };\n        return state;\n      }\n      default: {\n        return state;\n      }\n    }\n  },\n  initialState,\n);\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport cellsReducers from './cellsReducer';\nimport bundlesReducers from './bundlesReducer';\n\nconst reducers = combineReducers({\n  cells: cellsReducers,\n  bundles: bundlesReducers,\n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ActionType } from './action-types';\nimport reducers from './reducers';\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n\nstore.dispatch({\n  type: ActionType.INSERT_CELL_AFTER,\n  payload: {\n    id: null,\n    type: 'code',\n  },\n});\n","import * as esbuild from 'esbuild-wasm';\nimport localForage from 'localforage';\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache',\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: 'fetch-plugin',\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /(^index\\.js)/ }, () => {\n        return {\n          loader: 'jsx',\n          contents: inputCode,\n        };\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: esbuild.OnLoadArgs) => {\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path,\n        );\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n\n      build.onLoad({ filter: /.css$/ }, async (args: esbuild.OnLoadArgs) => {\n        const response = await fetch(args.path);\n        const resolveDirURL = new URL('./', response.url).pathname;\n        const data = await response.text();\n\n        const escaped = data\n          .replace(/\\n/g, '')\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n        const contents = `\n          const style = document.createElement('style');\n          style.innerText = '${escaped}'\n          document.head.appendChild(style)\n        `;\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents,\n          resolveDir: resolveDirURL,\n        };\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: esbuild.OnLoadArgs) => {\n        const response = await fetch(args.path);\n        const resolveDirURL = new URL('./', response.url).pathname;\n        const data = await response.text();\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: resolveDirURL,\n        };\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n    },\n  };\n};\n","import * as esbuild from 'esbuild-wasm';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\n\ninterface BundlerReturn {\n  code: string;\n  error: string;\n}\n\nclass Bundler {\n  static instance: Bundler;\n\n  static async getInstance(): Promise<Bundler> {\n    try {\n      if (!Bundler.instance) {\n        Bundler.instance = new Bundler();\n        await Bundler.instance.initialize();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return Bundler.instance;\n  }\n\n  async initialize() {\n    await esbuild.initialize({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.12.22/esbuild.wasm',\n    });\n  }\n\n  async build(rawCode: string): Promise<BundlerReturn> {\n    try {\n      const result = await esbuild.build({\n        entryPoints: ['index.js'],\n        bundle: true,\n        write: false,\n        plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n        define: {\n          'process.env.NODE_ENV': '\"production\"',\n          global: 'window',\n        },\n        jsxFactory: '_React.createElement',\n        jsxFragment: '_React.Fragment',\n      });\n\n      return {\n        code: result.outputFiles[0].text,\n        error: '',\n      };\n    } catch (error) {\n      return {\n        code: '',\n        error: error.message,\n      };\n    }\n  }\n}\n\nconst instance = Bundler.getInstance();\n\nexport default instance;\n","import * as esbuild from 'esbuild-wasm';\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({ filter: /(^index\\.js)/ }, () => {\n        return {\n          path: 'index.js',\n          namespace: 'a',\n        };\n      });\n\n      // Handle relative paths in a module\n      build.onResolve({ filter: /^\\.+\\// }, (args: esbuild.OnResolveArgs) => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, `https://unpkg.com${args.resolveDir}/`).href,\n        };\n      });\n\n      // Handle main file of a module\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        if (args.path.includes('./') || args.path.includes('../')) {\n          return {\n            namespace: 'a',\n            path: new URL(args.path, `https://unpkg.com${args.resolveDir}/`)\n              .href,\n          };\n        }\n\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`,\n        };\n      });\n    },\n  };\n};\n","import { Dispatch } from 'redux';\nimport { Action } from './../actions/index';\nimport { ActionType } from '../action-types';\nimport {\n  IUpdateCellAction,\n  IDeleteCellAction,\n  IMoveCellAction,\n  IInsertCellAfterAction,\n  TDirections,\n} from '../actions';\nimport { TCellTypes } from '../types';\nimport bundle from '../../utils/bundler';\n\nexport const updateCell = (id: string, content: string): IUpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  };\n};\n\nexport const deleteCell = (id: string): IDeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\n\nexport const moveCell = (\n  id: string,\n  direction: TDirections,\n): IMoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\n\nexport const insertCellAfter = (\n  id: string | null,\n  type: TCellTypes,\n): IInsertCellAfterAction => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type,\n    },\n  };\n};\n\nexport const createBundle = (cellId: string, input: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: { cellId },\n    });\n\n    const result = await (await bundle).build(input);\n\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: result,\n      },\n    });\n  };\n};\n","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state';\n\nfunction useActions() {\n  const dispatch = useDispatch();\n\n  return useMemo(() => {\n    return bindActionCreators(actionCreators, dispatch);\n  }, [dispatch]);\n}\n\nexport default useActions;\n","import useActions from '../../hooks/useActions';\nimport styles from './ActionBar.module.css';\n\ninterface IActionBarProps {\n  id: string;\n}\n\nconst ActionBar: React.FC<IActionBarProps> = ({ id }) => {\n  const { moveCell, deleteCell } = useActions();\n\n  return (\n    <div className={styles.actionBar}>\n      <button\n        className=\"button is-primary is-small\"\n        onClick={() => moveCell(id, 'up')}\n      >\n        <span className=\"icon\">\n          <i className=\"fas fa-arrow-up\"></i>\n        </span>\n      </button>\n      <button\n        className=\"button is-primary is-small\"\n        onClick={() => moveCell(id, 'down')}\n      >\n        <span className=\"icon\">\n          <i className=\"fas fa-arrow-down\"></i>\n        </span>\n      </button>\n      <button\n        className=\"button is-primary is-small\"\n        onClick={() => deleteCell(id)}\n      >\n        {' '}\n        <span className=\"icon\">\n          <i className=\"fas fa-times\"></i>\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default ActionBar;\n","import * as React from 'react';\nimport Editor, { OnMount } from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport Highlighter from 'monaco-jsx-highlighter';\nimport { parse } from '@babel/parser';\nimport traverse from '@babel/traverse';\n\nimport styles from './CodeEditor.module.css';\nimport './syntax.css';\n\nconst babelParse = (code: string) =>\n  parse(code, {\n    sourceType: 'module',\n    plugins: ['jsx'],\n  });\n\ninterface ICodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<ICodeEditorProps> = ({ initialValue, onChange }) => {\n  const monacoRef = React.useRef<any>(null);\n\n  const handleEditorDidMount: OnMount = (monacoEditor) => {\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(monacoEditor.getValue());\n    });\n\n    if (!monacoRef.current) {\n      monacoRef.current = monacoEditor;\n    }\n\n    const highlighter = new Highlighter(\n      // @ts-ignore\n      window.monaco,\n      babelParse,\n      traverse,\n      monacoEditor,\n    );\n\n    highlighter.highLightOnDidChangeModelContent();\n  };\n\n  const onFormatClick = () => {\n    const unformattedCode = monacoRef.current.getValue();\n    const formattedCode = prettier\n      .format(unformattedCode, {\n        parser: 'babel',\n        plugins: [parser],\n        useTabs: false,\n        singleQuote: true,\n        trailingComma: 'all',\n        semi: true,\n      })\n      .replace(/\\n$/, '');\n\n    monacoRef.current.setValue(formattedCode);\n  };\n\n  return (\n    <div className={styles.editorWrapper}>\n      <button\n        className={`button ${styles.buttonFormat} is-primary is-small`}\n        onClick={onFormatClick}\n      >\n        Format\n      </button>\n      <Editor\n        onMount={handleEditorDidMount}\n        value={initialValue}\n        height=\"100%\"\n        theme=\"vs-dark\"\n        language=\"javascript\"\n        options={{\n          wordWrap: 'on',\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 16,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n          tabSize: 2,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n","import { useState, useEffect } from 'react';\n\ninterface Size {\n  width: number;\n  height: number;\n}\n\nfunction useWindowsSize(): Size {\n  const [windowsSize, setWindowsSize] = useState<Size>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    function handleSize() {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(() => {\n        setWindowsSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }, 200);\n    }\n\n    window.addEventListener('resize', handleSize);\n\n    handleSize();\n\n    return () => window.removeEventListener('resize', handleSize);\n  }, []);\n\n  return windowsSize;\n}\n\nexport default useWindowsSize;\n","import * as React from 'react';\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\nimport useWindowsSize from '../../hooks/useWindowsSize';\nimport './Resizable.css';\n\ninterface IResizableProps {\n  direction: 'horizontal' | 'vertical';\n}\n\nconst Resizable: React.FC<IResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n\n  const { width, height } = useWindowsSize();\n  const [internalWidth, setInternalWidth] = React.useState(\n    window.innerWidth * 0.75,\n  );\n\n  React.useEffect(() => {\n    if (window.innerWidth * 0.75 < internalWidth) {\n      setInternalWidth(window.innerWidth * 0.75);\n    }\n  }, [width, internalWidth]);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resizeHorizontal',\n      minConstraints: [width * 0.2, Infinity],\n      maxConstraints: [width * 0.75, Infinity],\n      height: Infinity,\n      width: internalWidth,\n      resizeHandles: ['e'],\n      onResizeStop: (_, data) => {\n        setInternalWidth(data.size.width);\n      },\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 48],\n      maxConstraints: [Infinity, height * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s'],\n    };\n  }\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n","import * as React from 'react';\nimport styles from './Preview.module.css';\n\ninterface IPreviewProps {\n  code: string;\n  bundleErrorMessage: string | null;\n}\n\nconst html = `\n<html>\n  <head>\n  <style>\n    html { background-color: #fff;}\n  </style>\n  </head>\n\n  <body>\n    <div id=\"root\"></div>\n\n    <script>\n\n    const handleError = (err) => {\n      const root = document.querySelector('#root');\n      root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n      console.error(err);\n    };\n\n    window.addEventListener('error', (event) => {\n      event.preventDefault();\n      handleError(event.error);\n    }); \n\n      window.addEventListener('message', (event) => {\n        try {\n          eval(event.data);\n        } catch(err) {\n          handleError(err);\n        }\n      }, false);\n    </script>\n  </body>\n</html>\n`;\n\nconst Preview: React.FC<IPreviewProps> = ({ code, bundleErrorMessage }) => {\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n\n  React.useEffect(() => {\n    if (iframeRef.current) {\n      iframeRef.current.srcdoc = html;\n\n      setTimeout(() => {\n        if (iframeRef.current?.contentWindow) {\n          iframeRef.current.contentWindow.postMessage(code, '*');\n        }\n      }, 50);\n    }\n  }, [code]);\n\n  return (\n    <div className={styles.previewWrapper}>\n      <iframe\n        ref={iframeRef}\n        title=\"preview\"\n        srcDoc={html}\n        sandbox=\"allow-scripts\"\n      />\n      {bundleErrorMessage && (\n        <div className={styles.previewError}>{bundleErrorMessage}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Preview;\n","import {\n  useSelector as useReduxSelector,\n  TypedUseSelectorHook,\n} from 'react-redux';\nimport { RootState } from '../state';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\n","import styles from './ProgressBar.module.css';\n\nconst ProgressBar: React.FC = () => {\n  return (\n    <div className={styles.progressBarCover}>\n      <progress className=\"progress is-small is-primary\" max=\"100\">\n        Loading\n      </progress>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import * as React from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport Resizable from '../Resizable/Resizable';\nimport Preview from '../Preview/Preview';\nimport { ICell } from '../../state';\nimport useActions from '../../hooks/useActions';\nimport { bundleSelector } from '../../state/reducers/bundlesReducer';\nimport { useSelector } from '../../hooks/useTypedSelector';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport styles from './CodeCell.module.css';\nimport { useCumultiveCode } from '../../hooks/useCumulativeCode';\n\ninterface ICodeCellProps {\n  cell: ICell;\n}\n\nconst CodeCell: React.FC<ICodeCellProps> = ({ cell }) => {\n  const { updateCell, createBundle } = useActions();\n  const bundle = useSelector((state) => bundleSelector(state, cell.id));\n  const code = useCumultiveCode(cell.id);\n\n  React.useEffect(() => {\n    if (!bundle) {\n      createBundle(cell.id, code);\n      return;\n    }\n\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, code);\n    }, 750);\n\n    return () => clearTimeout(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [code, cell.id, createBundle]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          height: 'calc(100% - 10px)',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n          />\n        </Resizable>\n        <div className={styles.wrapper}>\n          {!bundle || bundle.loading ? (\n            <ProgressBar />\n          ) : (\n            <Preview code={bundle.code} bundleErrorMessage={bundle.error} />\n          )}\n        </div>\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n","import { useSelector } from './useTypedSelector';\n\nexport function useCumultiveCode(cellId: string) {\n  const cumulativeCode = useSelector((state) => {\n    const { data, order } = state.cells;\n    const orderedCells = order.map((id) => data[id]);\n\n    const showFn = `\n    import _React from 'react';\n    import _ReactDOM from 'react-dom';\n\n    var show = async (value) => {\n      if(typeof value === 'object') {\n        if (value.$$typeof && value.props) {\n          _ReactDOM.render(value, document.querySelector('#root'));\n        } else {\n          document.querySelector('#root').innerHTML = JSON.stringify(value);\n        }\n      } else {\n        document.querySelector('#root').innerHTML = value;\n      }\n    }\n    `;\n    const showFnNoop = `var show = () => {}`;\n\n    const codeAcc = [];\n\n    for (let c of orderedCells) {\n      if (c.type === 'code') {\n        if (c.id === cellId) {\n          codeAcc.push(showFn);\n        } else {\n          codeAcc.push(showFnNoop);\n        }\n        codeAcc.push(c.content);\n      }\n\n      if (c.id === cellId) {\n        break;\n      }\n    }\n\n    return codeAcc;\n  }).join('\\n');\n\n  return cumulativeCode;\n}\n","import * as React from 'react';\nimport MDEditor from '@uiw/react-md-editor';\n\nimport styles from './TextEditor.module.css';\nimport { ICell } from '../../state';\nimport useActions from '../../hooks/useActions';\n\ninterface ITextEditorProps {\n  cell: ICell;\n}\n\nconst TextEditor: React.FC<ITextEditorProps> = ({ cell }) => {\n  const { updateCell } = useActions();\n  const [editing, setEditing] = React.useState(false);\n  const divEditorRef = React.useRef<HTMLDivElement | null>(null);\n\n  React.useEffect(() => {\n    const handleEditing = (event: MouseEvent) => {\n      if (\n        divEditorRef.current &&\n        event.target &&\n        divEditorRef.current.contains(event.target as Node)\n      ) {\n        return;\n      }\n\n      setEditing(false);\n    };\n\n    document.addEventListener('click', handleEditing, { capture: true });\n\n    return () =>\n      document.removeEventListener('click', handleEditing, { capture: true });\n  }, []);\n\n  if (editing) {\n    return (\n      <div ref={divEditorRef} className={styles.textEditor}>\n        <MDEditor\n          value={cell.content}\n          onChange={(value) => updateCell(cell.id, value || '')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={() => setEditing(true)}\n      className={`${styles.textEditor} card`}\n    >\n      <div className=\"card-content\">\n        <MDEditor.Markdown source={cell.content || 'Click to edit'} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n","import { ICell } from '../../state';\nimport ActionBar from '../ActionBar/ActionBar';\nimport CodeCell from '../CodeCell/CodeCell';\nimport TextEditor from '../TextEditor/TextEditor';\nimport styles from './CellListItem.module.css';\n\ninterface ICellListItemProps {\n  cell: ICell;\n}\n\nconst CellListItem: React.FC<ICellListItemProps> = ({ cell }) => {\n  const child =\n    cell.type === 'code' ? (\n      <>\n        <div className={styles.actionBarWrapper}>\n          <ActionBar id={cell.id} />\n        </div>\n        <CodeCell cell={cell} />\n      </>\n    ) : (\n      <>\n        <TextEditor cell={cell} />\n        <ActionBar id={cell.id} />\n      </>\n    );\n\n  return <div className={styles.cellListItem}>{child}</div>;\n};\n\nexport default CellListItem;\n","import useActions from '../../hooks/useActions';\nimport styles from './AddCell.module.css';\n\ninterface IAddCellProps {\n  previousCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell: React.FC<IAddCellProps> = ({\n  previousCellId,\n  forceVisible = false,\n}) => {\n  const { insertCellAfter } = useActions();\n\n  return (\n    <div className={`${styles.addCell} ${forceVisible && styles.forceVisible}`}>\n      <div className={styles.addButtons}>\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellAfter(previousCellId, 'code')}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\" />\n          </span>\n          <span>Code</span>\n        </button>\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellAfter(previousCellId, 'text')}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\" />\n          </span>\n          <span>Text</span>\n        </button>\n      </div>\n      <div className={styles.divider}></div>\n    </div>\n  );\n};\n\nexport default AddCell;\n","import * as React from 'react';\nimport CellListItem from '../CellListItem/CellListItem';\nimport { cellsSelector } from '../../state/reducers/cellsReducer';\nimport AddCell from '../AddCell/AddCell';\nimport { useSelector } from '../../hooks/useTypedSelector';\nimport styles from './CellList.module.css';\n\nconst CellList: React.FC = () => {\n  const cells = useSelector(cellsSelector);\n\n  const renderedCells = cells.map((cell) => (\n    <React.Fragment key={cell.id}>\n      <CellListItem key={cell.id} cell={cell} />\n      <AddCell previousCellId={cell.id} />\n    </React.Fragment>\n  ));\n\n  return (\n    <div className={styles.cellList}>\n      <AddCell previousCellId={null} forceVisible={cells.length === 0} />\n      {renderedCells}\n    </div>\n  );\n};\n\nexport default CellList;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './state';\nimport CellList from './components/CellList/CellList';\n\nimport 'bulmaswatch/darkly/bulmaswatch.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        <CellList />\n      </div>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}